---
- name: Install Clickhouse
  tags: clickhouse
  hosts: clickhouse

  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.systemd:
        name: clickhouse-server
        state: restarted

  tasks:
    - name: Selecting package versions for architecture OS
      block:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com\
                 /rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "/tmp/{{ item }}-{{ clickhouse_version }}.rpm"
            mode: "0644"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com\
                 /rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "/tmp/clickhouse-common-static-{{ clickhouse_version }}.rpm"
            mode: "0644"

    - name: Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - /tmp/clickhouse-common-static-{{ clickhouse_version }}.rpm
          - /tmp/clickhouse-client-{{ clickhouse_version }}.rpm
          - /tmp/clickhouse-server-{{ clickhouse_version }}.rpm
        disable_gpg_check: true
      notify: Start clickhouse service

    - name: Copy config file config.xml
      become: true
      ansible.builtin.template:
        src: "clickhouse.xml.j2"
        dest: "/etc/clickhouse-server/config.xml"
        mode: "0600"
        backup: true
      notify: Start clickhouse service

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

    - name: Enable clickhouse service
      become: true
      ansible.builtin.systemd:
        name: clickhouse-server
        enabled: true

    - name: Wait to opened for port 9000
      ansible.builtin.wait_for:
        port: 9000
        delay: 10

    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'CREATE DATABASE IF NOT EXISTS {{ clickhouse_db_name }};'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc != 82
      changed_when: create_db.rc == 0

    - name: Create table
      ansible.builtin.command: "clickhouse-client -q 'CREATE TABLE IF NOT EXISTS {{ clickhouse_db_name }}.random_log\
                               (message String) ENGINE = MergeTree() ORDER BY tuple();'"
      register: table
      failed_when: table.rc != 0 and table.rc != 82
      changed_when: table.rc == 0


- name: Install Vector
  tags: vector
  hosts: vector

  handlers:
    - name: Systemd daemon reload
      become: true
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Start vector service
      become: true
      ansible.builtin.systemd:
        name: vector
        state: restarted

  tasks:
    - name: Get vector distrib
      ansible.builtin.get_url:
        url: "https://yum.vector.dev/stable/vector-0/x86_64/\
             vector-{{ vector_version }}-1.x86_64.rpm"
        dest: "/tmp/vector-{{ vector_version }}-1.x86_64.rpm"
        mode: "0644"

    - name: Install vector packages
      become: true
      ansible.builtin.yum:
        name: /tmp/vector-{{ vector_version }}-1.x86_64.rpm
        disable_gpg_check: true
      notify: Start vector service

    - name: Copy config file vector.yaml
      become: true
      ansible.builtin.template:
        src: "vector.yaml.j2"
        dest: "/etc/vector/vector.yaml"
        mode: "0644"
        backup: true
      notify: Start vector service

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

    - name: Enable vector service
      become: true
      ansible.builtin.systemd:
        name: vector
        enabled: true


- name: Install LightHouse
  tags: lighthouse
  hosts: lighthouse

  pre_tasks:
    - name: Install git package
      become: true
      ansible.builtin.yum:
        name: git

  tasks:
    - name: Download git repository LightHouse
      become: true
      ansible.builtin.git:
        repo: "https://github.com/VKCOM/lighthouse.git"
        dest: "{{ lighthouse_path }}"
        version: master


- name: Install Nginx
  tags: nginx
  hosts: lighthouse

  handlers:
    - name: Reload nginx service
      become: true
      ansible.builtin.command: "/usr/sbin/nginx -s reload"
      register: reload_nginx
      failed_when: reload_nginx.rc != 0
      changed_when: reload_nginx.rc == 0

    - name: Start nginx service
      become: true
      ansible.builtin.systemd:
        name: nginx
        state: restarted

  tasks:
    - name: Install nginx package
      become: true
      ansible.builtin.yum:
        name: nginx
      notify: Start nginx service

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

    - name: Copy config file nginx.conf
      become: true
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: "/etc/nginx/{{ item.dest }}"
        mode: "{{ item.mode }}"
        backup: true
      with_items:
        - { src: 'nginx.conf.j2', dest: 'nginx.conf', mode: '0644' }
        - { src: 'nginx_lighthouse.conf.j2', dest: 'conf.d/lighthouse.conf', mode: '0644' }
      notify: Reload nginx service

    - name: Enable nginx service
      become: true
      ansible.builtin.systemd:
        name: nginx
        enabled: true
